#### create a deterministic variable for the rate matrix ####
Q <- fnGTR(er,pi) 
alpha_prior <- 0.05
alpha ~ dnExponential( alpha_prior )
gamma_rates := fnDiscretizeGamma( alpha, alpha, 4, false )
# add moves the shape parameter
moves[++mi] = mvScale(alpha,weight=2)
topology ~ dnUniformTopology(taxa)
# add topology Metropolis-Hastings moves
moves[++mi] = mvNNI(topology, weight=1.0)
moves[++mi] = mvSPR(topology, weight=1.0)
# create branch length vector and add moves
for (i in 1:n_branches) {
   br_lens[i] ~ dnExponential(10.0)
   moves[++mi] = mvScale(br_lens[i])
}
# add deterministic node to monitor tree length
TL := sum(br_lens)
# unite topology and branch length vector into phylogeny object
phylogeny := treeAssembly(topology, br_lens)
seq ~ dnPhyloCTMC(tree=phylogeny, Q=Q, type="DNA")
# attach the data
seq.clamp(data)
mymodel = model(Q)
monitors[1] = mnModel(filename="output/host18S_bayesian1.log",printgen=10, separator = TAB)
monitors[2] = mnFile(filename="output/host18S_bayesian1.trees",printgen=10, separator = TAB, phylogeny)
monitors[3] = mnScreen(printgen=1000, TL)
mymcmc = mcmc(mymodel, monitors, moves, nruns=2)
###Notice that nruns = 2 is the reason why the output produces 2 trees.
###Normally you want to do 4. This is expensive tho
mymcmc.burnin(generations=10000,tuningInterval=1000)
mymcmc.run(generations=35000)
# Now, we will analyze the tree output.
# Let us start by reading in the tree trace
treetrace1 = readTreeTrace("host18S_bayesian1_run1.trees", treetype="non-clock")
treetrace2 = readTreeTrace("host18S_bayesian1_run2.trees", treetype="non-clock")
# and get the summary of the tree trace
#treetrace.summarize()
map_tree = mapTree(treetrace1,"host18S_bayesian1.tree")
map_tree = mapTree(treetrace2,"host18S_bayesian1.tree")
# you may want to quit RevBayes now
# q()
mymodel = model(Q)
monitors[1] = mnModel(filename="output/host18S_bayesian1.log",printgen=10, separator = TAB)
monitors[2] = mnFile(filename="output/host18S_bayesian1.trees",printgen=10, separator = TAB, phylogeny)
monitors[3] = mnScreen(printgen=1000, TL)
monitors[1] = mnModel(filename="output/host18S_bayesian1.log",printgen=10, separator = TAB)
monitors[2] = mnFile(filename="output/host18S_bayesian1.trees",printgen=10, separator = TAB, phylogeny)
monitors[3] = mnScreen(printgen=1000, TL)
monitors[2] = mnFile(filename="output/host18S_bayesian1.trees",printgen=10, separator = TAB, phylogeny)
mymcmc = mcmc(mymodel, monitors, moves, nruns=2)
er
mymodel
Q
q()
mymodel
mymodel$nodes
mymodel$node
q()
alpha
q()
er_prior <- v(1,1,1,1,1,1)
er ~ dnDirichlet(er_prior)
er
mcmc
model
model(fnJC(4))
model(Q)
q()
treetrace1 = readTreeTrace("output/host18S_bayesian1_run1.trees", treetype="non-clock")
treetrace2 = readTreeTrace("output/host18S_bayesian1_run2.trees", treetype="non-clock")
# and get the summary of the tree trace
#treetrace.summarize()
map_tree = mapTree(treetrace1,"output/host18S_bayesian1.tree")
map_tree = mapTree(treetrace2,"output/host18S_bayesian1.tree")
getwd()
q()
readTreeTrace
q()
treetrace1 = readTreeTrace("output/host18S_bayesian1_run1.trees", treetype="non-clock")
getwd()
setwd("./output")
getwd()
setwd("/output")
getwd()
q()
setwd("output")
getwd()
readTreeTrace("host18S_bayesian1_run1.trees", treetype="non-clock")
readTreeTrace("host18S_bayesian1_run_1.trees", treetype="non-clock")
q()
treetrace1 = readTreeTrace("output/host18S_bayesian1_run_1.trees", treetype="non-clock")
treetrace2 = readTreeTrace("output/host18S_bayesian1_run_2.trees", treetype="non-clock")# and get the summary of the tree trace#treetrace.summarize()map_tree = mapTree(treetrace1,"output/host18S_bayesian1_run_1.tree")map_tree = mapTree(treetrace2,"output/host18S_bayesian1_run_2.tree")# you may want to quit RevBayes nowq()
q()
treetrace1 = readTreeTrace("output/host18S_bayesian1_run_1.trees", treetype="non-clock")
treetrace2 = readTreeTrace("output/host18S_bayesian1_run_2.trees", treetype="non-clock")
map_tree = mapTree(treetrace1,"output/host18S_bayesian1_run_1.tree")
map_tree = mapTree(treetrace2,"output/host18S_bayesian1_run_2.tree")
q()
