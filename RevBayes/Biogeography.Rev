#Adapted from the RevBayes biogeography tutorial

############
# settings #
############

# Read in the biogeographical matrix

# The columns of the matrix are: 
#1 - US/Central America/Northern South America/North Africa
#2 - South America
#3 - South Africa
#4 - India
#5 - Australia
#6 - Europe/Greenland/Svalbard
#7 - Russia/West-Central Asia

data_fn = "data/Biogeographical_Matrix.nex"
tree_fn = "data/GTRseed1.tree"
out_str = "output/Biogeography"

# helper variables
mvi = 1 # index to add MCMC moves
mni = 1 # index to add monitors

# hard coded for now
n_areas = 7
n_areas_tmp = n_areas
n_states = floor(2^n_areas_tmp)

# read data as natural numbers
data = readCharacterDataDelimited(file=data_fn, type="Bitset")

#names = d.names()
psi <- readTrees(tree_fn)[1]

# clock
clock_bg ~ dnExp(10)
mv[mvi++] = mvScale(clock_bg, weight=5)

# base rates of area gain and loss
r_d ~ dnExp(10.)
r_e ~ dnExp(10.)
mv[mvi++] = mvScale(r_d, weight=5)
mv[mvi++] = mvScale(r_e, weight=5)

# per-area extinction rates
# ... for area i
for (i in 1:n_areas) {
    e[i] := r_e
}

# between-area dispersal rates

for (i in 1:n_areas) { 							# ... from area i
    for (j in 1:n_areas) {    					# ... to area j
		d[i][j] <- 0. 
        if (i != j) {       				# ... ignoring self-dispersal events
            d[i][j] := r_d
        }
    }
}

# initalize rates to 0.
for (i in 1:n_states) {
    for (j in 1:n_states) {
        r[i][j] <- 0.
    }
}

q := fnDECRateMatrix(d,e)

# create the cladogenesis transition probability matrix
widespread_sympatry_wt <- 1
subset_sympatry_wt     <- 1
allopatry_wt           <- 1
clado_prior            <- [ widespread_sympatry_wt, subset_sympatry_wt, allopatry_wt ]

# create prior on event types
clado_type             ~ dnDirichlet(clado_prior)
mv[mvi++]               = mvSimplexElementScale(clado_type, alpha=10, weight=5)

# for easy monitoring
widespread_sympatry    := clado_type[1]
subset_sympatry        := clado_type[2]
allopatry              := clado_type[3]

clado_prob := fnCladoProbs(clado_type, n_areas, 2)

rf <- simplex( rep(1,8) )

clock_bg ~ dnExponential(10)
mv[++mi] = mvScale(clock_bg, weight=5)

# build ctmc
m ~ dnPhyloCTMCClado( tree=psi, Q=q, cladoProbs=clado_prob, rootFrequencies=rf, branchRates=clock_bg, nSites=1, type="NaturalNumbers" )
m.clamp(data)

# make model
mdl = model(m)

# monitors
mn[mni++] = mnScreen(printgen=1000, clock_bg, widespread_sympatry, subset_sympatry, allopatry)
mn[mni++] = mnFile(clock_bg, d, e, widespread_sympatry, subset_sympatry, allopatry, filename="./output/"+out_str+".params.txt")
mn[mni++] = mnJointConditionalAncestralState(tree=psi, ctmc=m, type="NaturalNumbers", printgen=10, withTips=true, withStartStates=true, filename="./output/"+out_str+".states.txt")

# mcmc
ch = mcmc(mv,mn,mdl)
ch.burnin(10000, 10)
ch.run(10000)

# phylowood output
"Building Phylowood animation file..."
state_fn = "output/"+out_str+".states.txt"
atlas_fn = "data/Temnospondyls.atlas.txt"
phw_fn = "output/"+out_str+".phw.txt"
convertToPhylowood(treefile=tree_fn, geofile=atlas_fn, statefile=state_fn, outfile=phw_fn, burnin=0., chartype="NaturalNumbers", bgtype="Range")


# you may want to quit RevBayes now
q()
