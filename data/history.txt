data <- readDiscreteCharacterData("DQA_Outgroup2_Bayes.nex")
n_species <- data.ntaxa()
taxa <- data.names()
n_branches <- 2 * n_species - 3
mi = 0
kappa ~ dnLognormal(0,1)
moves[++mi] = mvScale(kappa, weight=1)
Q := fnK80(kappa)
alpha_prior<- 0.5
alpha ~ dnExponential( alpha_prior )
gamma_rates := fnDiscretizeGamma( alpha, alpha, 4, false )
moves[++mi] = mvScale(alpha,weight=2)
topology ~ dnUniformTopology(taxa)
moves[++mi] = mvNNI(topology, weight=1.0)
moves[++mi] = mvSPR(topology, weight=1.0)
for (i in 1:n_branches) {
   br_lens[i] ~ dnExponential(10.0)
   moves[++mi] = mvScale(br_lens[i])
}
TL := sum(br_lens)
phylogeny := treeAssembly(topology, br_lens)
seq ~ dnPhyloCTMC(tree=phylogeny, Q=Q, siteRates=gamma_rates, type="DNA")
seq.clamp(data)
mymodel = model(Q)
monitors[1] = mnModel(filename="output/DQA_Outgroup2_K80g3_posterior.log",printgen=10, separator = TAB)
monitors[2] = mnFile(filename="output/DQA_Outgroup2_K80g3_posterior.trees",printgen=10, separator = TAB, phylogeny)
monitors[3] = mnScreen(printgen=1000, TL)
mymcmc = mcmc(mymodel, monitors, moves, nruns=2)
mymcmc.run(generations=100000)
treetrace1 = readTreeTrace("output/DQA_Outgroup2_K80g3_posterior_run_1.trees", treetype="non-clock")
treetrace2 = readTreeTrace("output/DQA_Outgroup2_K80g3_posterior_run_2.trees", treetype="non-clock")
map_tree_1= mapTree(treetrace1,"output/DQA_Outgroup2_K80g3_posterior_run_1.tree", burnin=1000)
map_tree_2= mapTree(treetrace2,"output/DQA_Outgroup2_K80g3_posterior_run_2.tree", burnin=1000)
